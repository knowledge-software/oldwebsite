//  This code creates circling text messsages//  Originally gotten off the web, I have made extensive//  modifications for ease of mainentance and some added features.// These values may be defined ahead of including this file in order to customize this message for a particular page.var msgText;if (!msgText) msgText =  'Null Message! ';var msgColor;if (!msgColor) msgColor = 'black';var msgSize;if (!msgSize) msgSize =  3;          // up to 7var msgFont;if (!msgFont) msgFont =  'Courier,Monspace';  //'Cursive';// This is the reaction speed, keep low!// Set this to 1 for just plain rotation w/out dragvar reacSpeed=.4;// This is the rotation speed, set it negative if you want// it to spin clockwisevar rotSpeed=.3;var shadowOffs = 1;  // This can create a very nice 3D effect when used against a dark backgroundvar globalOnOff = 1;	// Some people hate the circe.  This gives us an interface to eliminate it.//-----------------------------------------------------------------------------------// Abandon all hope, ye who venture past this point.////-----------------------------------------------------------------------------------// The unfortunate byproduct of the browser wars: implementation incompatabilities.var ns=(document.layers);var ie=(document.all);//  Define global valuesvar boxSize=0;          // reset in circleMessageInit.var currStep=0;var yMouse=0;var xMouse=0;var aspectRatio=2;   // ratio of width to height 2 is good, 1 for circlevar msgLen;var y=new Array();var x=new Array();var mY=new Array();var mX=new Array();//  Event handler just remembers the current mouse position for later processing.function circleMessageMseH(evnt) {	yMouse = (ns)?evnt.pageY+20-(window.pageYOffset):event.y; // y-position	xMouse = (ns)?evnt.pageX+20:event.x-20;                   // x-position}//  Once this initializer is finishedfunction circleMessageInit(msg,font,size,color) {	var msg = msg.split('');	var props = "<font face="+font+" size="+size+" color="+color+">";	var len = msg.length;	boxSize=size*10;   // was 15 sets distance between letters	// writes the message out one character at a time, wrapping it with the correct signals for features.	if (ns){		// for netscape we define a labeled layer for each letter and define text characteristics.		if ( shadowOffs ) {	//Shadow text			props = "<font face="+font+" size="+size+" color="+'ltgray'+">";			for (i=0; i < len; i++)				document.write('<layer name="nsmsgSH'+i+'" top=0 left=0 height='+boxSize+' width='+boxSize+'><center>'+props+msg[i]+'</font></center></layer>');		}		props = "<font face="+font+" size="+size+" color="+color+">";		for (i=0; i < len; i++)			document.write('<layer name="nsmsg'+i+'" top=0 left=0 height='+boxSize+' width='+boxSize+'><center>'+props+msg[i]+'</font></center></layer>');					window.captureEvents(Event.MOUSEMOVE)		window.onMouseMove=circleMessageMseH;	}			if (ie){		// for ie we define a labeled div for each letter and define text characteristics.		window.pageYOffset=0;    // since ie doesn't define this value.		document.write('<div id="outer" style="position:absolute;top:0px;left:0px"><div style="position:relative">');		if ( shadowOffs ) {	//Shadow text			props = "<font face="+font+" size="+size+" color="+'ltgray'+">";			for (i=0; i < len; i++)			   document.write('<div id="iemsgSH" style="position:absolute;top:0px;left:0;height:'+boxSize+';width:'+boxSize+';text-align:center;font-weight:regular;cursor:default">'+props+msg[i]+'</font></div>');		}        		   //Shadow text		props = "<font face="+font+" size="+size+" color="+color+">";		for (i=0; i < len; i++)			document.write('<div id="iemsg" style="position:absolute;top:0px;left:0;height:'+boxSize+';width:'+boxSize+';text-align:center;font-weight:regular;cursor:default">'+props+msg[i]+'</font></div>');		document.write('</div></div>');		document.onmousemove=circleMessageMseH;	}	// initialize the memory variables.	for (i=0; i < len; i++)	    mY[i]=mX[i]=0;	msgLen = len;	}////  Manage moving the letters into a circlefunction circleMessageRotate(){   if (ie) outer.style.top=document.body.scrollTop;   currStep-=rotSpeed;   for (i=0; i < msgLen; i++){ // makes the circle      var d;       if ( shadowOffs ) {	//Shadow text	     d=(ns)?document.layers['nsmsgSH'+i]:iemsgSH[i].style;	     d.top=shadowOffs+y[i]+boxSize*Math.sin((currStep+i)/3.8)+window.pageYOffset-15;	     d.left=shadowOffs+x[i]+boxSize*Math.cos((currStep+i)/3.8)*aspectRatio;       } // Shadow text       	   d=(ns)?document.layers['nsmsg'+i]:iemsg[i].style;	   d.top=y[i]+boxSize*Math.sin((currStep+i)/3.8)+window.pageYOffset-15;	   d.left=x[i]+boxSize*Math.cos((currStep+i)/3.8)*aspectRatio;   }}function toggleCircle () {	if ( globalOnOff ) {		globalOnOff = 0;		// need to figure out to how to make text invisible!		   for (i=0; i < msgLen; i++){ // makes the circle			  var d;			   if ( shadowOffs ) {	//Shadow text				 d=(ns)?document.layers['nsmsgSH'+i]:iemsgSH[i].style;				 d.top=-20;				 d.left=-20;			   } // Shadow text			   			   d=(ns)?document.layers['nsmsg'+i]:iemsg[i].style;			   d.top=-20;			   d.left=-20;		   }		}		else {		globalOnOff = 1;		setTimeout('circleMessageDrag()',10);	}		}////  Provides the delayed drag follower.  x,y array is the position of each character mX and mY are //  the previous calculated positions that average into the current value.  Since this is a running//  average the values eventually coalesce to x,y as the function circleMessageDrag(){	 if ( globalOnOff ) {						y[0]=Math.round(mY[0]+=((yMouse)-mY[0])*reacSpeed);		x[0]=Math.round(mX[0]+=((xMouse)-mX[0])*reacSpeed);		for (var i=1; i < msgLen; i++){			y[i]=Math.round(mY[i]+=(y[i-1]-mY[i])*reacSpeed);			x[i]=Math.round(mX[i]+=(x[i-1]-mX[i])*reacSpeed);		}				// make the circle		circleMessageRotate();		// re enter drag every 10ms		setTimeout('circleMessageDrag()',10);	 } }////  This is where the fun begins!if (ns||ie) {	circleMessageInit( msgText, msgFont, msgSize, msgColor );	window.onload = circleMessageDrag;}