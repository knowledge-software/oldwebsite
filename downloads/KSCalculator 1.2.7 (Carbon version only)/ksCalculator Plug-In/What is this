What the hec....This project can be a bit confusing so it pays to go get a cup of 'whateva' and let this wash over you.  This code is covered by the standard GNU copyleft disclaimer.  It is offered, as is with no warrantees expressed or implied.  It may be given away, collected on compendiums, hung upside down and burned on campuses but it may never be sold as a product.  This information and the comments in the source files must be kept together.  If you  make modifications and improvements (and their are many possible) you are encouraged to share your modifications and addendums in a similar forum.  Please support open source software.This 'open source' FileMaker plug-in is a device for placing, within the FMP product, cells whose result is a simple arithmetic expression.  For example, in a given record you might have a cell called 'input' and a calculation field called 'result'.  Any given layout might have the 'result' field displayed as 'read-only' and superimposed on top of the 'input field'.  Because of the way FileMaker works, clicking on the read-only field will bring up the underlying editable field.  The user could enter a number or, like Quicken or QuickBooks, enter an expression like 2*3.  Leaving the field would hide the 'input' field and display the 'result' field which contains the actual arithmetic result of the expression.  All FMP plug-ins take a single string and return a single string.  This is a serious limitation for plug-ins.  It means we can never develop a graphical tool or analyzer (wouldn't it be great to build a tool that would chart a set of data based on a relationship.  [I mean a chart that is internally represented as a GIFf or PICT]).  It would also be nice if there were more than one parameter allowed.  As it is, every developer must provide their own way to parse and decode parameters from the single allowed parameter.  But because of this limitation we can make a simple shell program for testing the parser.To this end there are essentially two projects.  One is the scanner/parser whose job it is to build the algebraic expression into a tree for doing the calculation.  The other is the elements and overhead that make a plug-in work.  Building a scanner/parser is an easy task if you have access to AWK or YACC  or any other beautiful UNIX tools.  I don't.  Besides, I wanted to teach a class in parsers (and all the limitations this implies) and one always starts by hand coding* (contructivism at work!).  The first project allows the developer to work with the calculator outside the environment of the plug-in.  By making it a separate console application, debugging and tracing become an easy exercise.  Once the parser is tested you can switch the project to create a library which is then linked into the FileMaker plug-in.  I made the scanner/parser into a self-contained object so that it is an easy process of incorporating it into an FMP plug-in.There are 4 files missing from this project(s)  they are available to anyone with access to the FMP developer package.  Once upon a time this was openly available to any who wanted it.  I gather this may no longer be true.  These files declare and define the callback elements for FMP plug-ins and the interfaces for the required flags.  The other files which have to be modified for each and every plug-in are included in this project.Thanks,Paul BeekenKnowledge Software Consulting pbBeeken@knowsoft.com* Aho Sethi, and Ullman, a.k.a. "The Dragon Book"