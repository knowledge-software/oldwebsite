//	© Paul B. Beeken, Work In Progress, 1994-5//	Knowledge Software Consulting.////	Please, please, please, in the unlikely event you should use this stuff//	for some commercial application I would appreciate you contacting me.  If//	its for your own use, use away. Send email: knowsoft@idt.net//	My personal philosophy closely adheres to that of GNU software.  I offer this//	in the hope that others will improve and expand upon it.  Post your additions,//	leave this notice in place and add your own comments.////	As always: this file is presented as is with no warrantees expressed or implied.//	Swim at your own risk, etc. etc.////	CSeqPane.cp////	A c++ extention of a powerplantª (CodeWarrior) pane for the Quicktime component library //	associated with sequencers Instantiating a pane of this class will automatically open//	the default sequencerfor preview. This pane will also captutre a pict.  You can modify the//	code to suit your own purposes.//////	Current version 1.0		© Paul B. Beeken, Knowledge Software Consulting.#pragma once#include	<QuickTimeComponents.h>#include	<LPane.h>#include	<LPeriodical.h>class	CSeqrPane : public LPane, public LPeriodical {	public:		enum { class_ID = 'grab' };			static CSeqrPane*	CreateSeqrPaneStream(LStream *inStream);					CSeqrPane( void );					CSeqrPane(LStream *inStream);	virtual			~CSeqrPane( void );	virtual void	DrawSelf();				virtual	void	SpendTime(const EventRecord &inMacEvent);	virtual	void	ClickSelf(const SMouseDownEvent &inMouseDown);			void	Pause( void );			void	Continue( void );						PicHandle	Snap( FSSpec fspec );			void	Brightness( long b );			long	Brightness( void );			void	Contrast( long b );			long	Contrast( void );			void	Hue( long b );			long	Hue( void );			void	Saturation( long b );			long	Saturation( void );			void	Sharpness( long b );			long	Sharpness( void );			void	PopDialog( void );	protected:	virtual void	FinishCreateSelf();			void	makeSeqPane( short port );			void	updateValues( void );		private:		VideoDigitizerComponent	vdig;		// the digitizer		SeqGrabComponent		seqGrabber;		// Instance of a grabber		SGChannel				videoChannel;	// Can have many instances of a channel		Rect					videoBounds;		unsigned short			vdigBlackLevel;		unsigned short			vdigWhiteLevel;		unsigned short			vdigBrightness;		unsigned short			vdigHue;		unsigned short			vdigSaturation;		unsigned short			vdigContrast;		unsigned short			vdigSharpness;		static pascal Boolean	modalFilter( DialogPtr theDialog, EventRecord *theEvent, short *itemHit, long refCon );			};